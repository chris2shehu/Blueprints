blueprint:
  name: Arrival & Departure Announcements Google TTS
  description: Use Google TTS to announce when a person arrives or departs from a zone
  source_url: https://github.com/TekHawk/Blueprints/blob/b1c8594d5c24e48cf05e583e74d23f5cabc85c90/Arrival%20and%20Departure%20TTS.yaml
  domain: automation

  input:
    # Persons
    person_select:
      name: Person(s)
      description: "Persons to trigger TTS on"
      selector:
        target:
          entity:
            domain: person
    # Zone
    zone_select:
      name: Zone
      description: "Zone to trigger TTS on"
      selector:
        entity:
          domain: zone
    # Speakers
    media_player:
      name: Device(s) to speak through
      description: "This uses cloud TTS to send a text message"
      selector:
        target:
          entity:
            domain: media_player
    # Message arrival
    arrival_message:
      name: Arrival Message
      description: "Type your arrival message here. Use {name} to insert the person's name."
      default: "{name} has arrived at the zone!"
      selector:
        text:
          multiline: true
    # Message departure
    departure_message:
      name: Departure Message
      description: "Type your departure message here. Use {name} to insert the person's name."
      default: "{name} has left the zone."
      selector:
        text:
          multiline: true

trigger:
  - platform: zone
    entity_id: !input person_select
    zone: !input zone_select
    event: enter
  - platform: zone
    entity_id: !input person_select
    zone: !input zone_select
    event: leave

condition: []

action:
  - variables:
      entity_name: >
        {{ state_attr(trigger.entity_id, 'friendly_name') or trigger.entity_id }}
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.event == 'enter' }}
        sequence:
          - service: tts.cloud_say
            data:
              cache: false
              target: !input media_player
              message: >
                {{ !input.arrival_message | replace('{name}', entity_name) }}
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.event == 'leave' }}
        sequence:
          - service: tts.cloud_say
            data:
              cache: false
              target: !input media_player
              message: >
                {{ !input.departure_message | replace('{name}', entity_name) }}

mode: queued
max: 10
